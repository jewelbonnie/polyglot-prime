/*pgTap function to test register_interaction_http_request function*/

DROP FUNCTION IF EXISTS techbd_udi_assurance.test_register_interaction_http_request(text);
CREATE OR REPLACE FUNCTION techbd_udi_assurance.test_register_interaction_http_request(schema_name text DEFAULT 'techbd_udi_ingress'::text)
 RETURNS SETOF text
 LANGUAGE plpgsql
AS $function$
DECLARE    
    return_value TEXT;
    v_interaction_id TEXT; 
    v_interaction_key TEXT; 
    v_payload jsonb; 
    v_rule_namespace TEXT;
    v_elaboration jsonb; 
    v_nature jsonb; 
    v_content_type TEXT; 
    v_from_state TEXT; 
    v_to_state TEXT; 
    v_state_transition_reason TEXT; 
    v_created_at timestamp; 
    v_created_by TEXT; 
    v_provenance TEXT; 
    v_hub_upsert_behavior boolean;
    function_exists boolean;
	v_hub_diagnostic_id TEXT;
    v_record_count numeric;
    v_group_id TEXT;				
	v_status TEXT;
	v_payload_text TEXT; 
	v_hl7_json jsonb; 

	v_csv_zip_file_name TEXT;
	v_csv_zip_file_content bytea;
	v_csv_screening_observation_data_payload_text TEXT;
	v_csv_screening_profile_data_payload_text TEXT;
	v_csv_demographic_data_payload_text TEXT;
	v_csv_qe_admin_data_payload_text TEXT; 
	v_csv_screening_observation_data_file_name TEXT;
	v_csv_screening_profile_data_file_name TEXT;
	v_csv_demographic_data_file_name TEXT;
	v_csv_qe_admin_data_file_name TEXT;
	v_source_hub_interaction_id TEXT;
	v_sat_interaction_zip_file_request_id TEXT;
	v_client_ip_address TEXT;
	v_user_agent TEXT;
	v_origin TEXT;
	v_source_type TEXT;
	v_group_hub_interaction_id TEXT;
    v_sftp_session_id TEXT;
	v_zip_file_processing_errors jsonb;

BEGIN
	
    v_interaction_id            := 'b41ccd27-9a4f-5cc8-9c5d-b55242d90fb0';
    v_interaction_key           := '/Bundle';
    v_elaboration               := '{"key" : "elaboration"}';
    v_nature                    := '{"nature": "org.techbd.service.http.Interactions$RequestResponseEncountered", "tenant_id": "N/A"}';
    v_content_type              := 'application/json';
    v_from_state                := NULL;
    v_to_state                  := NULL;
    v_state_transition_reason   := 'state_transition_reason_1';
    v_created_at                := CURRENT_TIMESTAMP;
    v_created_by                := CURRENT_USER;
    v_provenance                := 'org.techbd.service.http.InteractionsFilter.doFilterInternal';
    v_hub_upsert_behavior       := FALSE;
    v_rule_namespace            := NULL;
    v_hub_diagnostic_id         := NULL;
    v_record_count              := 0;
    v_origin					:= 'http';
    v_source_type				:= 'fhir';
   
    -- Check if the table 'pgtap_fixtures_json' exists
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'techbd_udi_assurance' 
               AND table_name = 'pgtap_fixtures_json') THEN 
        SELECT "jsonb" INTO v_payload
        FROM techbd_udi_assurance.pgtap_fixtures_json 
        WHERE "name" = 'interaction_payload';
    ELSE 
        RETURN NEXT 'Table techbd_udi_assurance.pgtap_fixtures_json does not exist';
    END IF;
    
    -- Check existence of required functions     
    RETURN NEXT has_function(schema_name, 'register_interaction_http_request',
        ARRAY['text', 'text', 'jsonb', 'text', 'text', 'jsonb', 'jsonb', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'timestamptz', 'text', 'text', 'bool', 'text', 'bytea', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text'],
        'Function register_interaction_http_request exists');
       
    RETURN NEXT has_function(schema_name, 'register_issue', ARRAY['text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'jsonb'], 'Function register_issue exists');
    
    RETURN NEXT has_function(schema_name, 'sat_interaction_fhir_request_upserted', ARRAY['text', 'text', 'text', 'text', 'text', 'text', 'jsonb', 'text', 'timestamptz', 'text', 'text', 'jsonb', 'text', 'text', 'text'], 'Function sat_interaction_fhir_request_upserted exists');
  
   	RETURN NEXT has_function(schema_name, 'sat_interaction_csv_request_upserted', ARRAY['text', 'text', 'text', 'text', 'text', 'bytea', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'jsonb', 'text', 'text', 'text', 'timestamptz', 'text', 'text', 'jsonb', 'text', 'text', 'text', 'text', 'text', 'jsonb'], 
   		'Function sat_interaction_csv_request_upserted exists');
    RETURN NEXT has_table(schema_name, 'sat_interaction_flat_file_csv_request', 'The table techbd_udi_ingress.sat_interaction_flat_file_csv_request should exist.');

    RETURN NEXT has_pk(schema_name, 'sat_interaction_flat_file_csv_request', 'The table techbd_udi_ingress.sat_interaction_flat_file_csv_request should have a primary key.');


    RETURN NEXT columns_are(schema_name, 'sat_interaction_flat_file_csv_request',
        ARRAY['sat_interaction_flat_file_csv_request_id', 'hub_interaction_id', 'tenant_id', 'tenant_id_lower', 'uri', 'nature', 'group_id', 'status',
            'validation_result_payload', 
            'client_ip_address', 'user_agent',
            'from_state', 'to_state', 'state_transition_reason', 'elaboration', 'created_at', 'created_by', 'provenance',
            'screening_observation_data_payload_text', 'screening_profile_data_payload_text',
            'demographic_data_payload_text', 'qe_admin_data_payload_text',
            'screening_observation_data_file_name', 'screening_profile_data_file_name',
            'demographic_data_file_name', 'qe_admin_data_file_name', 'zip_file_hub_interaction_id'],
        'The columns of techbd_udi_ingress.sat_interaction_flat_file_csv_request should match the expected structure.'
    );
  
    RETURN NEXT has_table(schema_name, 'sat_interaction_zip_file_request', 'The table techbd_udi_ingress.sat_interaction_zip_file_request should exist.');

    RETURN NEXT has_pk(schema_name, 'sat_interaction_zip_file_request', 'The table techbd_udi_ingress.sat_interaction_zip_file_request should have a primary key.');

    RETURN NEXT col_is_fk(schema_name,
        'sat_interaction_zip_file_request', 
        'hub_interaction_id', 
        'The foreign key from sat_interaction_zip_file_request.hub_interaction_id to techbd_udi_ingress.hub_interaction should exist.');

    RETURN NEXT columns_are(schema_name, 'sat_interaction_zip_file_request',
        ARRAY['sat_interaction_zip_file_request_id', 'hub_interaction_id', 'tenant_id', 'tenant_id_lower', 'uri', 'nature', 'group_id', 'status',
            'csv_zip_file_name', 'csv_zip_file_content', 
            'client_ip_address', 'user_agent', 
            'elaboration', 'created_at', 'created_by', 'provenance', 'origin', 'validation_result_payload','sftp_session_id', 'misc_errors'],
        'The columns of techbd_udi_ingress.sat_interaction_zip_file_request should match the expected structure.');
    
    RETURN NEXT col_type_is(schema_name, 'sat_interaction_zip_file_request', 'csv_zip_file_content', 'bytea', 'The column csv_zip_file_content should be of type bytea.');
   
    RETURN NEXT col_not_null(schema_name, 'sat_interaction_zip_file_request', 'hub_interaction_id', 'The column hub_interaction_id should be NOT NULL.');

    /*=================== Testing with FHIR bundle ========================*/
   
    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => v_payload,
        payload_text             => NULL::text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        origin					 => v_origin,
        source_type				 => v_source_type
    );
    
    RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.hub_interaction hub_intr
                            WHERE hub_intr.hub_interaction_id    = v_interaction_id
                            AND hub_intr."key"                   = v_interaction_key
                            AND hub_intr.created_by              = v_created_by
                            AND hub_intr.provenance              = v_provenance
                   ),
            'FHIR Bundle - Successfully inserted into the table hub_interaction'
        );
        
   /*Test 3 raws are inserted into sat_interaction_http_request table*/
   SELECT COUNT(1) INTO v_record_count
	 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
	WHERE COALESCE(sat_intr.hub_interaction_id, '') = v_interaction_id
	  AND COALESCE(sat_intr.nature_denorm, '') IN (
	      'org.techbd.service.http.Interactions$RequestResponseEncountered', 
	      'Original FHIR Payload', 
	      'techByDesignDisposition'
	  )
	  AND COALESCE(sat_intr.created_by, '') = v_created_by
	  AND COALESCE(sat_intr.provenance, '') = v_provenance;
	
	RETURN NEXT ok(
	    v_record_count = 3,
	    'Successfully validated that 3 records exist in sat_interaction_http_request'
	);

   /*Test 3 raws are inserted into sat_interaction_fhir_request table*/
   SELECT COUNT(1) INTO v_record_count
	 FROM techbd_udi_ingress.sat_interaction_fhir_request sat_intr
	WHERE sat_intr.hub_interaction_id = v_interaction_id
	  AND COALESCE(sat_intr.uri, '') = v_interaction_key
	  AND COALESCE(sat_intr.nature, '') IN (
	      'org.techbd.service.http.Interactions$RequestResponseEncountered', 
	      'Original FHIR Payload', 
	      'techByDesignDisposition'
	  )
	  AND COALESCE(sat_intr.created_by, '') = v_created_by
	  AND COALESCE(sat_intr.provenance, '') = v_provenance;
	
	RETURN NEXT ok(
	    v_record_count = 3,
	    'Successfully validated that 3 records exist in sat_interaction_fhir_request'
	);

   /*Test one record is inserted into sat_interaction_user table*/
   RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_user sat_intr
                            WHERE sat_intr.hub_interaction_id	= v_interaction_id
                            AND sat_intr.uri                    = v_interaction_key
							AND sat_intr.nature 				= v_nature->>'nature'
                            AND sat_intr.created_by				= v_created_by
                            AND sat_intr.provenance				= v_provenance
                   ),
            'FHIR Bundle - Successfully inserted into the table sat_interaction_user'
        );
       
	/*===================================================================*/
       
    /*====================Testing with CSV File=========================*/
       
    /* First call to insert CSV files into sat_interaction_http_request and sat_interaction_zip_file_request */
    v_interaction_id            	:= 'b55ccd45-9a4f-5cc8-9c5d-b45245d90fb0';
    v_interaction_key           	:= '/flatfile/csv/Bundle'; 
    v_nature                    	:= '{"nature":"Original CSV Zip Archive", "tenant_id":"N/A"}';
    v_from_state                	:= NULL::text; 
    v_to_state                  	:= NULL::text;
	v_group_id						:= 'test';	
	v_provenance					:= 'csv';
	v_status						:= 'test_status';
	v_csv_zip_file_name				:= '123_abc_rochester-20240911-testcase2.zip'; 
	v_csv_zip_file_content			:= E'\\x5468697320697320612062696e6172792064617461';
	v_csv_screening_observation_data_payload_text 	:= 'PAT_MRN_ID|FACILITY_ID|ENCOUNTER_ID|ENCOUNTER_CLASS_CODE|ENCOUNTER_CLASS_CODE_DESCRIPTION|ENCOUNTER_CLASS_CODE_SYSTEM|ENCOUNTER_STATUS_CODE|ENCOUNTER_STATUS_CODE_DESCRIPTION|ENCOUNTER_STATUS_CODE_SYSTEM|ENCOUNTER_TYPE_CODE|ENCOUNTER_TYPE_CODE_DESCRIPTION|ENCOUNTER_TYPE_CODE_SYSTEM|SCREENING_STATUS_CODE|SCREENING_STATUS_CODE_DESCRIPTION|SCREENING_STATUS_CODE_SYSTEM|SCREENING_CODE|SCREENING_CODE_DESCRIPTION|SCREENING_CODE_SYSTEM_NAME|RECORDED_TIME|QUESTION_CODE|QUESTION_CODE_DESCRIPTION|QUESTION_CODE_SYSTEM_NAME|UCUM_UNITS|SDOH_DOMAIN|PARENT_QUESTION_CODE|ANSWER_CODE|ANSWER_CODE_DESCRIPTION|ANSWER_CODE_SYSTEM_NAME|POTENTIAL_NEED_INDICATED
test-MRN|CNYSCN|DXHMGMNUHI|EMER|emergency|http://terminology.hl7.org/CodeSystem/v3-ActCode|unknown|Unknown|http://hl7.org/fhir/encounter-status|23918007|History taking, self-administered, by computer terminal|http://snomed.info/sct|amended|Amended|http://hl7.org/fhir/observation-status|96777-8|Accountable health communities (AHC) health-related social needs screening (HRSN) tool|http://loinc.org|2023-03-11T23:24:27.495202-03:00|71802-3|What is your living situation today?|http://loinc.org||Homelessness, Housing Instability||LA31993-1|I have a steady place to live|http://loinc.org|No
test-MRN|CNYSCN|DXHMGMNUHI|EMER|emergency|http://terminology.hl7.org/CodeSystem/v3-ActCode|unknown|Unknown|http://hl7.org/fhir/encounter-status|23918007|History taking, self-administered, by computer terminal|http://snomed.info/sct|amended|Amended|http://hl7.org/fhir/observation-status|96777-8|Accountable health communities (AHC) health-related social needs screening (HRSN) tool|http://loinc.org|2023-03-11T23:24:27.495202-03:00|96778-6|Think about the place you live. Do you have problems with any of the following?|http://loinc.org||Inadequate Housng||LA32001-2|Water leaks|http://loinc.org|Yes';
	v_csv_screening_profile_data_payload_text 	:= 'PAT_MRN_ID|FACILITY_ID|ENCOUNTER_ID|ENCOUNTER_CLASS_CODE|ENCOUNTER_CLASS_CODE_DESCRIPTION|ENCOUNTER_CLASS_CODE_SYSTEM|ENCOUNTER_STATUS_CODE|ENCOUNTER_STATUS_CODE_DESCRIPTION|ENCOUNTER_STATUS_CODE_SYSTEM|ENCOUNTER_TYPE_CODE|ENCOUNTER_TYPE_CODE_DESCRIPTION|ENCOUNTER_TYPE_CODE_SYSTEM|SCREENING_STATUS_CODE|SCREENING_STATUS_CODE_DESCRIPTION|SCREENING_STATUS_CODE_SYSTEM|SCREENING_CODE|SCREENING_CODE_DESCRIPTION|SCREENING_CODE_SYSTEM_NAME|RECORDED_TIME|QUESTION_CODE|QUESTION_CODE_DESCRIPTION|QUESTION_CODE_SYSTEM_NAME|UCUM_UNITS|SDOH_DOMAIN|PARENT_QUESTION_CODE|ANSWER_CODE|ANSWER_CODE_DESCRIPTION|ANSWER_CODE_SYSTEM_NAME|POTENTIAL_NEED_INDICATED
test-MRN|CNYSCN|DXHMGMNUHI|EMER|emergency|http://terminology.hl7.org/CodeSystem/v3-ActCode|unknown|Unknown|http://hl7.org/fhir/encounter-status|23918007|History taking, self-administered, by computer terminal|http://snomed.info/sct|amended|Amended|http://hl7.org/fhir/observation-status|96777-8|Accountable health communities (AHC) health-related social needs screening (HRSN) tool|http://loinc.org|2023-03-11T23:24:27.495202-03:00|71802-3|What is your living situation today?|http://loinc.org||Homelessness, Housing Instability||LA31993-1|I have a steady place to live|http://loinc.org|No
test-MRN|CNYSCN|DXHMGMNUHI|EMER|emergency|http://terminology.hl7.org/CodeSystem/v3-ActCode|unknown|Unknown|http://hl7.org/fhir/encounter-status|23918007|History taking, self-administered, by computer terminal|http://snomed.info/sct|amended|Amended|http://hl7.org/fhir/observation-status|96777-8|Accountable health communities (AHC) health-related social needs screening (HRSN) tool|http://loinc.org|2023-03-11T23:24:27.495202-03:00|96778-6|Think about the place you live. Do you have problems with any of the following?|http://loinc.org||Inadequate Housng||LA32001-2|Water leaks|http://loinc.org|Yes';

	v_csv_demographic_data_payload_text := 'MPI_ID|PAT_MRN_ID|FACILITY_ID|CONSENT|FIRST_NAME|MIDDLE_NAME|LAST_NAME|ADMINISTRATIVE_SEX_CODE|ADMINISTRATIVE_SEX_CODE_DESCRIPTION|ADMINISTRATIVE_SEX_CODE_SYSTEM|SEX_AT_BIRTH_CODE|SEX_AT_BIRTH_CODE_DESCRIPTION|SEX_AT_BIRTH_CODE_SYSTEM|PAT_BIRTH_DATE|ADDRESS1|ADDRESS2|CITY|STATE|ZIP|PHONE|SSN|GENDER_IDENTITY_CODE|GENDER_IDENTITY_CODE_DESCRIPTION|GENDER_IDENTITY_CODE_SYSTEM_NAME|SEXUAL_ORIENTATION_CODE|SEXUAL_ORIENTATION_CODE_DESCRIPTION|SEXUAL_ORIENTATION_CODE_SYSTEM_NAME|PREFERRED_LANGUAGE_CODE|PREFERRED_LANGUAGE_CODE_DESCRIPTION|PREFERRED_LANGUAGE_CODE_SYSTEM_NAME|RACE_CODE|RACE_CODE_DESCRIPTION|RACE_CODE_SYSTEM_NAME|ETHNICITY_CODE|ETHNICITY_CODE_DESCRIPTION|ETHNICITY_CODE_SYSTEM_NAME|MEDICAID_CIN
7778047133|test-MRN|CNYSCN|Yes|James|Gary|Rodriguez|ASKU|Asked but Unknown|http://terminology.hl7.org/CodeSystem/v3-NullFlavor|M|Male|http://terminology.hl7.org/CodeSystem/v3-AdministrativeGender|1998-03-09|969 Daniel Manors Apt. 454|Suite 11|Binghamton|NY|13901|001-837-697-5431x13565|436-99-8619|ASKU|Asked but unknown|http://snomed.info/sct|38628009|Homosexual|http://snomed.info/sct|cnr|Montenegrin|ISO|1244-3|Southeastern Indians|urn:oid:2.16.840.1.113883.6.238|2161-8|Salvadoran|urn:oid:2.16.840.1.113883.6.238|AB53156E';
	v_csv_qe_admin_data_payload_text 	:= 'PAT_MRN_ID|FACILITY_ID|FACILITY_LONG_NAME|ORGANIZATION_TYPE|FACILITY_ADDRESS1|FACILITY_ADDRESS2|FACILITY_CITY|FACILITY_STATE|FACILITY_ZIP|VISIT_PART_2_FLAG|VISIT_OMH_FLAG|VISIT_OPWDD_FLAG
test-MRN|CNYSCN|Crossroads NY Social Care Network|SCN|25 W 45th st|Suite 16|New York|New York|10036|No|No|No';

	v_csv_screening_observation_data_file_name 	:= 'SCREENING_observation_test.csv';
	v_csv_screening_profile_data_file_name 		:= 'SCREENING_profile_test.csv';

	v_csv_demographic_data_file_name 			:= 'DEMOGRAPHIC_DATA_test.csv';
	v_csv_qe_admin_data_file_name 				:= 'QE_ADMIN_DATA_test.csv';
	v_source_hub_interaction_id					:= v_interaction_id;
	v_client_ip_address	:= 'test_client_ip_address';
	v_user_agent		:= 'test_user_agent';
	v_source_type 		:= 'csv';
	v_sftp_session_id   := NULL::text;

    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => NULL::jsonb,
        payload_text             => NULL::text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        csv_group_id			 => v_group_id,
        csv_status				 => v_status,        		
		csv_zip_file_name		 => v_csv_zip_file_name,
		csv_zip_file_content	 => v_csv_zip_file_content,
		client_ip_address		 => v_client_ip_address,	
		user_agent				 => v_user_agent,
		origin					 => v_origin,
        source_type				 => v_source_type,
        sftp_session_id          => v_sftp_session_id
    );
    
    RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.hub_interaction hub_intr
                            WHERE hub_intr.hub_interaction_id    = v_interaction_id
                            AND hub_intr."key"                   = v_interaction_key
                            AND hub_intr.created_by              = v_created_by
                            AND hub_intr.provenance              = v_provenance
                   ),
            'CSV - Successfully inserted into the table hub_interaction'
        );
        
   /*Test 1 raw is inserted into sat_interaction_http_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.nature                   = v_nature
                             AND sat_intr.nature_denorm            = v_nature->>'nature'
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_http_request with "Original CSV Zip Archive" as nature'
         );
        
    /*Test 1 raw is inserted into sat_interaction_zip_file_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_zip_file_request sat_intr
                             WHERE sat_intr.hub_interaction_id  = v_interaction_id
                             AND sat_intr.uri                   = v_interaction_key
                             AND sat_intr.nature                = v_nature->>'nature'
                             AND sat_intr.created_by            = v_created_by
                             AND sat_intr.provenance            = v_provenance
                         	 AND group_id				 		= v_group_id
        					 AND status					 		= v_status
        					 AND client_ip_address 				= v_client_ip_address
							 AND user_agent 					= v_user_agent
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_zip_file_request with "Original CSV Zip Archive" as nature'
         );

   /*Test one record is inserted into sat_interaction_user table*/
   RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_user sat_intr
                            WHERE sat_intr.hub_interaction_id	= v_interaction_id
                            AND sat_intr.uri                    = v_interaction_key
							AND sat_intr.nature 				= v_nature->>'nature'
                            AND sat_intr.created_by				= v_created_by
                            AND sat_intr.provenance				= v_provenance
                   ),
            'CSV - Successfully inserted into the table sat_interaction_user'
        );

    /*Test for sftp and storing sftp session id*/
        
	v_sftp_session_id   := '0cc90e96-b8bc-4642-b4ae-910444360636';

    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => NULL::jsonb,
        payload_text             => NULL::text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        csv_group_id			 => v_group_id,
        csv_status				 => v_status,        		
		csv_zip_file_name		 => v_csv_zip_file_name,
		csv_zip_file_content	 => v_csv_zip_file_content,
		client_ip_address		 => v_client_ip_address,	
		user_agent				 => v_user_agent,
		origin					 => 'sftp',
        source_type				 => v_source_type,
        sftp_session_id          => v_sftp_session_id
    );
    
    RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.hub_interaction hub_intr
                            WHERE hub_intr.hub_interaction_id    = v_interaction_id
                            AND hub_intr."key"                   = v_interaction_key
                            AND hub_intr.created_by              = v_created_by
                            AND hub_intr.provenance              = v_provenance
                   ),
            'CSV - Successfully inserted into the table hub_interaction'
        );
        
   /*Test 1 raw is inserted into sat_interaction_http_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.nature                   = v_nature
                             AND sat_intr.nature_denorm            = v_nature->>'nature'
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_http_request with "Original CSV Zip Archive" as nature'
         );
        
    /*Test 1 raw is inserted into sat_interaction_zip_file_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_zip_file_request sat_intr
                             WHERE sat_intr.hub_interaction_id  = v_interaction_id
                             AND sat_intr.uri                   = v_interaction_key
                             AND sat_intr.nature                = v_nature->>'nature'
                             AND sat_intr.created_by            = v_created_by
                             AND sat_intr.provenance            = v_provenance
                         	 AND group_id				 		= v_group_id
        					 AND status					 		= v_status
        					 AND client_ip_address 				= v_client_ip_address
							 AND user_agent 					= v_user_agent
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_zip_file_request with "Original CSV Zip Archive" as nature'
         );

   /*Test one record is inserted into sat_interaction_user table*/
   RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_user sat_intr
                            WHERE sat_intr.hub_interaction_id	= v_interaction_id
                            AND sat_intr.uri                    = v_interaction_key
							AND sat_intr.nature 				= v_nature->>'nature'
                            AND sat_intr.created_by				= v_created_by
                            AND sat_intr.provenance				= v_provenance
                   ),
            'CSV - Successfully inserted into the table sat_interaction_user'
        );
   
    /*Second call from NULL to CSV_ACCEPT and insert into sat_interaction_flat_file_csv_request and sat_interaction_http_request*/   
    v_interaction_id            := 'b66ddd45-9a4f-5cc8-9c5d-b45245d90fb0';
	v_nature                    := '{"nature": "Original Flat File CSV", "tenant_id": "N/A"}';
	v_from_state				:= NULL;
    v_to_state                  := 'CSV_ACCEPT'; 
    v_group_hub_interaction_id	:= v_interaction_id;
   
    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => NULL::jsonb,
        payload_text             => NULL::text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        csv_group_id			 => v_group_id,
        csv_status				 => v_status,
		csv_zip_file_name		 => v_csv_zip_file_name,
		csv_zip_file_content	 => v_csv_zip_file_content,
		csv_screening_observation_data_payload_text	=> v_csv_screening_observation_data_payload_text,
		csv_screening_profile_data_payload_text		=> v_csv_screening_profile_data_payload_text,	
		csv_demographic_data_payload_text			=> v_csv_demographic_data_payload_text,
		csv_qe_admin_data_payload_text				=> v_csv_qe_admin_data_payload_text,		
		csv_screening_observation_data_file_name	=> v_csv_screening_observation_data_file_name,
		csv_screening_profile_data_file_name		=> v_csv_screening_profile_data_file_name,		
		csv_demographic_data_file_name				=> v_csv_demographic_data_file_name,
		csv_qe_admin_data_file_name					=> v_csv_qe_admin_data_file_name,
		source_hub_interaction_id					=> v_source_hub_interaction_id,
		client_ip_address		 => v_client_ip_address,	
		user_agent				 => v_user_agent,
		source_type				 => v_source_type
    );
       
    /*Test 1 raw is inserted into sat_interaction_http_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.nature                   = v_nature
                             AND sat_intr.nature_denorm            = v_nature->>'nature'
                             AND sat_intr.content_type             = v_content_type
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_http_request with "Original Flat File CSV" as nature'
         );
    
    /*Test 1 raw is inserted into sat_interaction_flat_file_csv_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_flat_file_csv_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.uri                      = v_interaction_key
                             AND sat_intr.nature                   = v_nature->>'nature'
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                         	 AND group_id				 		   = v_group_id
        					 AND status					 		   = v_status
        					 AND demographic_data_payload_text 	   = v_csv_demographic_data_payload_text
        					 AND qe_admin_data_payload_text 	   = v_csv_qe_admin_data_payload_text
        					 AND demographic_data_file_name 	   = v_csv_demographic_data_file_name
							 AND qe_admin_data_file_name 		   = v_csv_qe_admin_data_file_name
							 AND screening_observation_data_payload_text= v_csv_screening_observation_data_payload_text 
							 AND screening_profile_data_payload_text	= v_csv_screening_profile_data_payload_text 		
							 AND screening_observation_data_file_name	= v_csv_screening_observation_data_file_name 
							 AND screening_profile_data_file_name		= v_csv_screening_profile_data_file_name 
							 AND zip_file_hub_interaction_id    		= v_source_hub_interaction_id
							 AND client_ip_address 						= v_client_ip_address
							 AND user_agent 							= v_user_agent
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_flat_file_csv_request with "Original Flat File CSV" as nature and zip_file sat_interaction_id'
         );
        
    /*Third call from CSV_ACCEPT to VALIDATION_SUCCESS/VALIDATION_FAILED and insert into sat_interaction_flat_file_csv_request and sat_interaction_http_request*/    
	v_interaction_id            := 'b77ddd45-9a4f-5cc8-9c5d-b45245d90fb0';
    v_nature                    := '{"nature": "CSV Validation Result", "tenant_id": "N/A"}';
	v_from_state				:= 'CSV_ACCEPT';
    v_to_state                  := 'VALIDATION_SUCCESS'; 
   
    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => NULL::jsonb,
        payload_text             => NULL::text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        csv_group_id			 => v_group_id,
        csv_status				 => v_status,
        csv_zip_file_name		 => v_csv_zip_file_name,
		csv_zip_file_content	 => v_csv_zip_file_content,
		csv_screening_observation_data_payload_text	=> v_csv_screening_observation_data_payload_text,
		csv_demographic_data_payload_text			=> v_csv_demographic_data_payload_text,
		csv_screening_profile_data_payload_text		=> v_csv_screening_profile_data_payload_text,
		csv_qe_admin_data_payload_text				=> v_csv_qe_admin_data_payload_text,		
		csv_screening_observation_data_file_name	=> v_csv_screening_observation_data_file_name,
		csv_screening_profile_data_file_name		=> v_csv_screening_profile_data_file_name,		
		csv_demographic_data_file_name				=> v_csv_demographic_data_file_name,
		csv_qe_admin_data_file_name					=> v_csv_qe_admin_data_file_name,
		source_hub_interaction_id					=> v_source_hub_interaction_id,
		client_ip_address		 => v_client_ip_address,	
		user_agent				 => v_user_agent,
		source_type				 => v_source_type
    );
       
    /*Test 1 raw is inserted into sat_interaction_http_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.nature                   = v_nature
                             AND sat_intr.nature_denorm            = v_nature->>'nature'
                             AND sat_intr.content_type             = v_content_type
                             AND sat_intr.from_state               = v_from_state
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.state_transition_reason  = v_state_transition_reason
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_http_request with "CSV Validation Result" as nature'
         );
    
    /*Test 1 raw is inserted into sat_interaction_flat_file_csv_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_flat_file_csv_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.uri                      = v_interaction_key
                             AND sat_intr.nature                   = v_nature->>'nature'
                             AND sat_intr.from_state               = v_from_state
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                         	 AND group_id				 		   = v_group_id
        					 AND status					 		   = v_status
        					 AND demographic_data_payload_text 	   = v_csv_demographic_data_payload_text
        					 AND qe_admin_data_payload_text 	   = v_csv_qe_admin_data_payload_text
        					 AND demographic_data_file_name 	   = v_csv_demographic_data_file_name
							 AND qe_admin_data_file_name 		   = v_csv_qe_admin_data_file_name
							 AND screening_observation_data_payload_text= v_csv_screening_observation_data_payload_text 
							 AND screening_profile_data_payload_text	= v_csv_screening_profile_data_payload_text 	
							 AND screening_observation_data_file_name	= v_csv_screening_observation_data_file_name 
							 AND screening_profile_data_file_name		= v_csv_screening_profile_data_file_name 							                              
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_flat_file_csv_request with "CSV Validation Result" as nature'
         );
        
    /*Fourth call from VALIDATION_SUCCESS/VALIDATION_FAILED to CONVERTED_TO_FHIR/FHIR_CONVERTION_FAILED and insert into sat_interaction_flat_file_csv_request and sat_interaction_http_request*/
    v_interaction_id            := 'b88ddd45-9a4f-5cc8-9c5d-b45245d90fb0';    
    v_nature                    := '{"nature": "Converted to FHIR", "tenant_id": "N/A"}';
	v_from_state				:= 'VALIDATION_SUCCESS';
    v_to_state                  := 'CONVERTED_TO_FHIR'; 
   
    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => NULL::jsonb,
        payload_text             => NULL::text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        csv_group_id			 => v_group_id,
        csv_status				 => v_status,
		csv_zip_file_name		 => v_csv_zip_file_name,
		csv_zip_file_content	 => v_csv_zip_file_content,
		csv_screening_observation_data_payload_text	=> v_csv_screening_observation_data_payload_text,
		csv_screening_profile_data_payload_text		=> v_csv_screening_profile_data_payload_text,	
		csv_demographic_data_payload_text			=> v_csv_demographic_data_payload_text,
		csv_qe_admin_data_payload_text				=> v_csv_qe_admin_data_payload_text,		
		csv_screening_observation_data_file_name	=> v_csv_screening_observation_data_file_name,
		csv_screening_profile_data_file_name		=> v_csv_screening_profile_data_file_name,	
		csv_demographic_data_file_name				=> v_csv_demographic_data_file_name,
		csv_qe_admin_data_file_name					=> v_csv_qe_admin_data_file_name,
		source_hub_interaction_id					=> v_source_hub_interaction_id,
		client_ip_address		 => v_client_ip_address,	
		user_agent				 => v_user_agent,
		source_type				 => v_source_type
    );
       
    /*Test 1 raw is inserted into sat_interaction_http_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.nature                   = v_nature
                             AND sat_intr.nature_denorm            = v_nature->>'nature'
                             AND sat_intr.content_type             = v_content_type
                             AND sat_intr.from_state               = v_from_state
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.state_transition_reason  = v_state_transition_reason
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_http_request with "Converted to FHIR" as nature'
         );
    
    /*Test 1 raw is inserted into sat_interaction_flat_file_csv_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_flat_file_csv_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.uri                      = v_interaction_key
                             AND sat_intr.nature                   = v_nature->>'nature'
                             AND sat_intr.from_state               = v_from_state
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                         	 AND group_id				 		   = v_group_id
        					 AND status					 		   = v_status
        					 AND demographic_data_payload_text 	   = v_csv_demographic_data_payload_text
        					 AND qe_admin_data_payload_text 	   = v_csv_qe_admin_data_payload_text
        					 AND demographic_data_file_name 	   = v_csv_demographic_data_file_name
							 AND qe_admin_data_file_name 		   = v_csv_qe_admin_data_file_name
							 AND screening_observation_data_payload_text= v_csv_screening_observation_data_payload_text 
							 AND screening_profile_data_payload_text	= v_csv_screening_profile_data_payload_text	
							 AND screening_observation_data_file_name	= v_csv_screening_observation_data_file_name 
							 AND screening_profile_data_file_name		= v_csv_screening_profile_data_file_name 
                             
                    ),
             'CSV - Successfully inserted one record into the table sat_interaction_flat_file_csv_request with "Converted to FHIR" as nature'
         );  
        
    /*To update validation_result_payload for the full zip file, call techbd_udi_ingress.sat_interaction_csv_request_upserted function with interaction_id, uri, validation_result_payload and nature as 'Update Zip File Payload'.*/
    SELECT techbd_udi_ingress.sat_interaction_csv_request_upserted(
    	interaction_id				=> v_source_hub_interaction_id::text, 
    	uri							=> v_interaction_key::text, 
    	validation_result_payload 	=> v_payload::jsonb,
    	nature 						=> 'Update Zip File Payload'::text
   	) INTO v_interaction_id;
  
    RETURN NEXT ok(v_interaction_id = v_source_hub_interaction_id, 'CSV - Successfully updated the table sat_interaction_zip_file_request with consolidated payload');
      
	/*To update the errors and status after the zip file is processed, call techbd_udi_ingress.sat_interaction_csv_request_upserted function with interaction_id, uri, error details and nature as 'Update Zip File Processing Details'.*/
	v_zip_file_processing_errors 	:= '{"error1": "error details 1", "error2": "error details 2"}';
	v_status						:= 'PROCESSED';
	v_interaction_id				:= NULL;
    SELECT techbd_udi_ingress.sat_interaction_csv_request_upserted(
    	interaction_id				=> v_source_hub_interaction_id::text, 
    	uri							=> v_interaction_key::text, 
    	status						=> v_status::text, 
    	zip_file_processing_errors	=> v_zip_file_processing_errors::jsonb,
    	nature 						=> 'Update Zip File Processing Details'::text
   	) INTO v_interaction_id;
  
    RETURN NEXT ok(v_interaction_id = v_source_hub_interaction_id, 'CSV - Successfully updated the table sat_interaction_zip_file_request with status and error details');
    
  
    /* Last call to insert the FHIR bundle which is generated from CSV file with interaction_key = '/flatfile/csv/Bundle'*/
    v_interaction_id            := 'b99ddd45-9a4f-5cc8-9c5d-b45245d90fb0';    
    v_nature                    := '{"nature": "org.techbd.service.http.Interactions$RequestResponseEncountered", "tenant_id": "N/A"}';
    v_to_state                  := NULL; 
    v_from_state                := NULL; 

    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => v_payload,
        payload_text             => NULL::text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => FALSE,
        source_hub_interaction_id => v_source_hub_interaction_id,
		client_ip_address		 => v_client_ip_address,	
		user_agent				 => v_user_agent,
		source_type				 => v_source_type,
		group_hub_interaction_id => v_group_hub_interaction_id
    );
   
   /*Test 3 raws are inserted into sat_interaction_http_request table*/
   SELECT COUNT(1) INTO v_record_count
	 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
	WHERE COALESCE(sat_intr.hub_interaction_id, '') = v_interaction_id
	  AND COALESCE(sat_intr.nature_denorm, '') IN (
	      'org.techbd.service.http.Interactions$RequestResponseEncountered', 
	      'Original FHIR Payload', 
	      'techByDesignDisposition'
	  )
	  AND COALESCE(sat_intr.created_by, '') = v_created_by
	  AND COALESCE(sat_intr.provenance, '') = v_provenance;
	
	RETURN NEXT ok(
	    v_record_count = 3,
	    'CSV - Successfully inserted 3 records into the table sat_interaction_http_request'
	);

   /*Test 3 raws are inserted into sat_interaction_fhir_request table*/
   SELECT COUNT(1) INTO v_record_count
     FROM techbd_udi_ingress.sat_interaction_fhir_request sat_intr
    WHERE COALESCE(sat_intr.hub_interaction_id, '') = v_interaction_id
	  AND COALESCE(sat_intr.uri, '') = v_interaction_key
	  AND COALESCE(sat_intr.nature, '') IN (
	      'org.techbd.service.http.Interactions$RequestResponseEncountered', 
	      'Original FHIR Payload', 
	      'techByDesignDisposition'
	  )
	  AND COALESCE(sat_intr.created_by, '') = v_created_by
	  AND COALESCE(sat_intr.provenance, '') = v_provenance
	  AND source_type = 'csv';
	
	RETURN NEXT ok(
	    v_record_count = 3,
	    'CSV - Successfully inserted 3 records into the table sat_interaction_fhir_request'
	);

	/*=====================END of CSV Testing============================*/

	/*=================== Testing with HL7 File ========================*/
       
    /* First call to insert HL7 text and json converted from HL7 */
    v_interaction_id            := 'a45ccd45-9a4f-5cc8-9c5d-b45245d90fb0';
    v_interaction_key           := '/Hl7/v2'; 
    v_nature                    := '{"nature":"Original HL7 Payload", "tenant_id":"N/A"}';
    v_from_state                := NULL; 
    v_to_state                  := 'HL7_ACCEPT'; 
    v_hl7_json					:= '{"hl7": "hl7 json", "status": "ok"}'::jsonb;
    v_payload_text				:= 'MSH|^~\&|SendingApp1|SendingFac1|ReceivingApp1|ReceivingFac|2023100412||ADT^A01|124445678|P|2.4||||
PID|||112024345690^123^12345||Doe Le^John^^^MR||19651015|M||2054-5^Black|123 Main St^^Anytown^USA^12345||(555)555-5555||S||123456789|987654^NC||||2135-2^Hispanic or Latino';
    v_client_ip_address			:= 'test_client_ip_address';
	v_user_agent				:= 'test_user_agent';
	v_source_type 				:= 'hl7';
	v_origin					:= 'http';
	v_source_hub_interaction_id	:= v_interaction_id;

    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => v_hl7_json,
        payload_text             => v_payload_text,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        client_ip_address		 => v_client_ip_address,
		user_agent				 => v_user_agent,
		source_type				 => v_source_type,
		origin					 => v_origin
    );
    
    RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.hub_interaction hub_intr
                            WHERE hub_intr.hub_interaction_id    = v_interaction_id
                            AND hub_intr."key"                   = v_interaction_key
                            AND hub_intr.created_by              = v_created_by
                            AND hub_intr.provenance              = v_provenance
                   ),
            'HL7 - Successfully inserted into the table hub_interaction'
        );
        
   /*Test 1 raw is inserted into sat_interaction_http_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.nature                   = v_nature
                             AND sat_intr.nature_denorm            = v_nature->>'nature'
                             AND sat_intr.content_type             = v_content_type
                             AND sat_intr.payload                  = v_hl7_json
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.state_transition_reason  = v_state_transition_reason
                             AND sat_intr.payload_text             = v_payload_text
                             AND sat_intr.elaboration              = v_elaboration
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                    ),
             'HL7 - Successfully inserted one record into the table sat_interaction_http_request with "Original HL7 Payload" as nature'
         );
        
    /*Test 1 raw is inserted into sat_interaction_hl7_request table*/
    RETURN NEXT ok(
             EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_hl7_request sat_intr
                             WHERE sat_intr.hub_interaction_id     = v_interaction_id
                             AND sat_intr.uri                      = v_interaction_key
                             AND sat_intr.nature                   = v_nature->>'nature'
                             AND sat_intr.payload                  = v_hl7_json
                             AND sat_intr.to_state                 = v_to_state
                             AND sat_intr.created_by               = v_created_by
                             AND sat_intr.provenance               = v_provenance
                             AND client_ip_address 				   = v_client_ip_address
							 AND user_agent 					   = v_user_agent
                    ),
             'HL7 - Successfully inserted one record into the table sat_interaction_hl7_request with "Original HL7 Payload" as nature'
         );

   /*Test one record is inserted into sat_interaction_user table*/
   RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_interaction_user sat_intr
                            WHERE sat_intr.hub_interaction_id	= v_interaction_id
                            AND sat_intr.uri                    = v_interaction_key
							AND sat_intr.nature 				= v_nature->>'nature'
                            AND sat_intr.created_by				= v_created_by
                            AND sat_intr.provenance				= v_provenance
                   ),
            'HL7 - Successfully inserted into the table sat_interaction_user'
        );
   
   /* Second call to insert the FHIR bundle which is generated from HL7 json with interaction_key = '/Hl7/v2'*/
    v_nature                    := '{"nature": "org.techbd.service.http.Interactions$RequestResponseEncountered", "tenant_id": "N/A"}';
    v_to_state                  := NULL; 
    

    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => v_payload,
        payload_text             => NULL,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => TRUE,
        source_hub_interaction_id=> v_source_hub_interaction_id,
        source_type				 => v_source_type,
		origin					 => v_origin
    );
   
   /*Test 3 raws are inserted into sat_interaction_http_request table*/
   RETURN NEXT ok(
	    CASE
	        WHEN (
	            SELECT count(hub_interaction_id) 
	            FROM techbd_udi_ingress.sat_interaction_http_request sat_intr
	            WHERE sat_intr.hub_interaction_id = v_interaction_id
	            AND sat_intr.nature_denorm IN (
	                'org.techbd.service.http.Interactions$RequestResponseEncountered', 
	                'Original FHIR Payload', 
	                'techByDesignDisposition'
	            )
	            AND sat_intr.created_by = v_created_by
	            AND sat_intr.provenance = v_provenance
	        ) = 3
	        THEN TRUE 
	        ELSE FALSE 
	    END,
	    'HL7 - Successfully inserted 3 records into the table sat_interaction_http_request'
	);

   /*Test 3 raws are inserted into sat_interaction_fhir_request table*/
   RETURN NEXT ok(
	    CASE
	        WHEN (
	            SELECT count(hub_interaction_id) 
	            FROM techbd_udi_ingress.sat_interaction_fhir_request sat_intr
	            WHERE sat_intr.hub_interaction_id = v_interaction_id
	            AND sat_intr.uri = v_interaction_key
	            AND sat_intr.nature IN (
	                'org.techbd.service.http.Interactions$RequestResponseEncountered', 
	                'Original FHIR Payload', 
	                'techByDesignDisposition'
	            )
	            AND sat_intr.created_by = v_created_by
	            AND sat_intr.provenance = v_provenance
	            AND source_type = v_source_type
	        ) = 3
	        THEN TRUE 
	        ELSE FALSE 
	    END,
	    'HL7 - Successfully inserted 3 records into the table sat_interaction_fhir_request'
	); 

	/*======================END of HL7 Testing===========================*/

	/*===================================================================*/
	/*Test the exception handling with Unique Constraint Violation*/
       
    PERFORM techbd_udi_ingress.register_interaction_http_request(
        interaction_id           => v_interaction_id,
        interaction_key          => v_interaction_key,
        payload                  => v_payload,
        payload_text             => NULL,
        rule_namespace           => v_rule_namespace,
        elaboration              => v_elaboration,
        nature                   => v_nature,
        content_type             => v_content_type,
        from_state               => v_from_state,
        to_state                 => v_to_state,
        state_transition_reason  => v_state_transition_reason,
        created_at               => v_created_at,
        created_by               => v_created_by,
        provenance               => v_provenance,
        hub_upsert_behavior      => false
    );
   
    RETURN NEXT ok(
    	EXISTS(SELECT 1 
		    FROM techbd_udi_ingress.hub_diagnostic hub_exp
		    WHERE hub_exp."key"      = v_interaction_key
		    AND hub_exp.created_by   = v_created_by
		    AND hub_exp.provenance   = v_provenance LIMIT 1
		), 
		'Successfully catched the exception and inserted into the table hub_diagnostic');
    
    SELECT hub_exp.hub_diagnostic_id INTO v_hub_diagnostic_id
    FROM techbd_udi_ingress.hub_diagnostic hub_exp
    WHERE hub_exp."key"      = v_interaction_key
    AND hub_exp.created_by   = v_created_by
    AND hub_exp.provenance   = v_provenance LIMIT 1;
    
    IF v_hub_diagnostic_id != '' THEN 
	    RETURN NEXT ok(
	            EXISTS((SELECT 1 FROM techbd_udi_ingress.sat_diagnostic_exception sat_exp
	                            WHERE sat_exp.hub_diagnostic_id  = v_hub_diagnostic_id--v_hub_diagnostic_row.hub_diagnostic_id                    
	                            AND sat_exp.created_by           = v_created_by
	                            AND sat_exp.provenance           = v_provenance
	                   ) UNION  
	                   (SELECT 1 FROM techbd_udi_ingress.sat_diagnostic_log sat_log
	                            WHERE sat_log.hub_diagnostic_id  = v_hub_diagnostic_id--v_hub_diagnostic_row.hub_diagnostic_id                    
	                            AND sat_log.created_by           = v_created_by
	                            AND sat_log.provenance           = v_provenance)),
	            'Successfully inserted exception details into the table sat_diagnostic_exception or sat_diagnostic_log'
	        ); 
    END IF;
END;
$function$
;





DROP FUNCTION IF EXISTS techbd_udi_assurance.test_json_action_rule_upsert(text);

CREATE OR REPLACE FUNCTION techbd_udi_assurance.test_json_action_rule_upsert(schema_name text DEFAULT 'techbd_udi_ingress'::text)
 RETURNS SETOF text
 LANGUAGE plpgsql
AS $function$
DECLARE    
    v_payload 				jsonb; 
    v_action_rule_id 		TEXT 		:= NULL;
    v_created_at 			timestamp; 
    v_hub_diagnostic_row 	techbd_udi_ingress.hub_diagnostic%ROWTYPE;
    v_namespace 			TEXT; 
    v_json_path 			TEXT; 
    v_action 				TEXT; 
    v_condition 			jsonb; 
    v_reject_json 			jsonb; 
    v_modify_json 			jsonb; 
    v_priority 				integer; 
    v_updated_by 			TEXT; 
    v_last_applied_at 		timestamp with time zone; 
    v_created_by 			TEXT; 
    v_provenance 			TEXT;
	v_return				TEXT 		:= NULL;
	v_key					TEXT 		:= 'action_rule';
BEGIN
	/**
	* The function techbd_udi_assurance.test_json_action_rule_upsert is designed to perform unit tests on the
	* json_action_rule_upserted function in the techbd_udi_ingress schema. It validates the existence of key functions,
	* checks the correctness of insert and update operations, and tests the handling of exceptions. The function returns
	* detailed messages regarding the success or failure of each test, including checking the insertion of records into the
	* json_action_rule table and verifying exception handling by checking logs in diagnostic tables.
	*/

    v_namespace			:= 'namespace_group_1';
    v_json_path			:= '$.response.responseBody.OperationOutcome.validationResults[*].operationOutcome.issue[*].location[*] ? (@ == "Bundle.entry[0].resource/*Patient/PatientExample*/.extension[2].value.ofType(code)")';
    v_action			:= 'reject';
    v_priority			:= 1;
    v_updated_by		:= CURRENT_USER;
    v_last_applied_at	:= CURRENT_TIMESTAMP;
    v_created_by		:= CURRENT_USER;
    v_provenance		:= '{"Key" : "value"}';	


    -- Check if the table 'pgtap_fixtures_json' exists
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'techbd_udi_assurance' 
               AND table_name = 'pgtap_fixtures_json') THEN 
        SELECT "jsonb" INTO v_condition
        FROM techbd_udi_assurance.pgtap_fixtures_json 
        WHERE "name" = 'json_action_rule_condition';
       
        SELECT "jsonb" INTO v_reject_json
        FROM techbd_udi_assurance.pgtap_fixtures_json 
        WHERE "name" = 'json_action_rule_reject_json';
       
        SELECT "jsonb" INTO v_modify_json
        FROM techbd_udi_assurance.pgtap_fixtures_json 
        WHERE "name" = 'json_action_rule_modify_json';
    ELSE 
        RETURN NEXT 'Table techbd_udi_assurance.pgtap_fixtures_json does not exist';
    END IF;

    -- Check existence of required functions     
    RETURN NEXT has_function(
        schema_name,
        'json_action_rule_upserted',
        ARRAY['text', 'text', 'text', 'text', 'jsonb', 'jsonb', 'jsonb', 'integer', 'text', 'text', 'text'],
        'Function json_action_rule_upserted exists'
    ); 
   
    RETURN NEXT has_function(
        schema_name,
        'register_issue',
        ARRAY['text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'text', 'jsonb'],
        'Function register_issue exists'
    );

	
    SELECT techbd_udi_ingress.json_action_rule_upserted(
    	action_rule_id	=> NULL,
    	namespace		=> v_namespace, 
    	json_path		=> v_json_path, 
    	action			=> v_action, 
    	condition		=> v_condition, 
    	reject_json		=> v_reject_json, 
    	modify_json		=> v_modify_json, 
    	priority		=> v_priority, 
    	updated_by		=> v_updated_by, 
    	created_by		=> v_created_by, 
    	provenance		=> v_provenance
    ) INTO v_return;  
   
	RETURN NEXT ok(
			EXISTS(SELECT 1 WHERE v_return IS NOT NULL),
            'Successfully inserted into the table json_action_rule'
        );

   	v_action_rule_id := v_return;
       
   	SELECT techbd_udi_ingress.json_action_rule_upserted(
    	action_rule_id	=> v_action_rule_id,
    	namespace		=> v_namespace, 
    	json_path		=> v_json_path, 
    	action			=> v_action, 
    	condition		=> v_condition, 
    	reject_json		=> v_reject_json, 
    	modify_json		=> v_modify_json, 
    	priority		=> v_priority, 
    	updated_by		=> v_updated_by, 
    	created_by		=> v_created_by, 
    	provenance		=> v_provenance
   ) INTO v_return;  
   
   RETURN NEXT ok(v_action_rule_id = v_return,
            'Successfully updated the table json_action_rule'
        );

   /*Test the exception handling*/
   SELECT techbd_udi_ingress.json_action_rule_upserted(
    	action_rule_id	=> NULL,
    	namespace		=> v_namespace, 
    	json_path		=> v_json_path, 
    	action			=> 'test', 
    	condition		=> v_condition, 
    	reject_json		=> v_reject_json, 
    	modify_json		=> v_modify_json, 
    	priority		=> v_priority, 
    	updated_by		=> v_updated_by, 
    	created_by		=> v_created_by, 
    	provenance		=> '{"Key" : "exception"}' 
    ) INTO v_return; 
   
   SELECT hub_exp.* INTO v_hub_diagnostic_row
   FROM techbd_udi_ingress.hub_diagnostic hub_exp
   WHERE hub_exp."key"      	= v_key
	   AND hub_exp.created_by   = CURRENT_USER
	   AND hub_exp.provenance   = '{"Key" : "exception"}' 
   ;
   
   RETURN NEXT ok(v_hub_diagnostic_row IS NOT NULL, 'Successfully catched the exception and inserted into the table hub_diagnostic'); 
   
   RETURN NEXT ok(
            EXISTS(SELECT 1 FROM techbd_udi_ingress.sat_diagnostic_exception sat_exp
                            WHERE sat_exp.hub_diagnostic_id  = v_hub_diagnostic_row.hub_diagnostic_id                    
                            AND sat_exp.created_by           = CURRENT_USER
                            AND sat_exp.provenance           = '{"Key" : "exception"}'
                   ),
            'Successfully inserted exception details into the table sat_diagnostic_exception'
        );  
END;
$function$
;